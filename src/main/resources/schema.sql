DROP TABLE IF EXISTS films_users_likes CASCADE;
DROP TABLE IF EXISTS users_friend_list CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS films_genres CASCADE;
DROP TABLE IF EXISTS genres CASCADE;
DROP TABLE IF EXISTS mpas CASCADE;
DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS reviews CASCADE;
DROP TABLE IF EXISTS reviews_users_likes CASCADE;

CREATE TABLE IF NOT EXISTS mpa_ratings
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(128)
);

CREATE TABLE IF NOT EXISTS films
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(128) NOT NULL,
    description VARCHAR(200),
    release_date DATE,
    duration INTEGER CHECK (duration > 0),
    mpa_id INTEGER NOT NULL REFERENCES mpa_ratings (id)
);

CREATE TABLE IF NOT EXISTS genres
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(128)
);

CREATE TABLE IF NOT EXISTS films_genres
(
    film_id INTEGER NOT NULL REFERENCES films (id),
    genre_id INTEGER NOT NULL REFERENCES genres (id),
    PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS users
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(128) NOT NULL UNIQUE,
    login VARCHAR(128) NOT NULL UNIQUE,
    name VARCHAR(128) NOT NULL,
    birthday DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS directors
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(128) NOT NULL
);

CREATE TABLE IF NOT EXISTS film_directors
(
    film_id INT,
    director_id INT,
    FOREIGN KEY (film_id) REFERENCES films (id),
    FOREIGN KEY (director_id) REFERENCES directors (id),
    PRIMARY KEY (film_id, director_id)
);

CREATE TABLE IF NOT EXISTS users_friend_list
(
    from_user_id INTEGER NOT NULL REFERENCES users (id),
    to_user_id INTEGER NOT NULL REFERENCES users (id),
    accepted BOOLEAN NOT NULL,
    PRIMARY KEY (from_user_id, to_user_id)
);

CREATE TABLE IF NOT EXISTS films_users_likes
(
    film_id INTEGER NOT NULL REFERENCES films (id),
    user_id INTEGER NOT NULL REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS reviews
(
    review_id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    content     VARCHAR(4000) NOT NULL,
    is_positive BOOLEAN,
    user_id     INTEGER       NOT NULL REFERENCES users (id),
    film_id     INTEGER       NOT NULL REFERENCES films (id),
    useful      INTEGER
);

CREATE TABLE IF NOT EXISTS reviews_users_likes
(
    review_id INTEGER NOT NULL REFERENCES reviews (review_id) ON DELETE CASCADE ,
    user_id   INTEGER NOT NULL REFERENCES users (id),
    type      INTEGER NOT NULL
);